Part A:
1. #include <bits/stdc++.h>

using namespace std;

struct Point
{
	int x;
	int y;
	Point(int a, int b){ x = a; y = b;}
	~Point(){}
	void print()
	{
		cout << x << "-" << y;
	}
};

int main()
{
	Point x(2, 3);
	x.print();
	return 0;
}

2.
#include <bits/stdc++.h>

using namespace std;

struct Point
{
	int x;
	int y;
	Point(int a, int b){ x = a; y = b;}
	Point(){}
	~Point(){}
	void print()
	{
		cout << x << "-" << y;
	}
};

Point* Address(Point x)
{
	Point* c = &x;
	return c;
}
Point* Address1(Point x)
{
	Point* c = &x;
	return c;
}

int main()
{
	Point x(2, 3);
	x.print();
	cout << endl;
	cout << &x <<  endl;
	cout << Address(x) << endl;
	cout << Address1(x);
	return 0;
}

3. 
#include <bits/stdc++.h>

using namespace std;

struct Point
{
	double x;
	double y;
	Point(int a, int b){ x = a; y = b;}
	Point(){}
	~Point(){}
	void print()
	{
		cout << x << "-" << y;
	}
};

Point mid_point(Point a, Point b)
{
	Point c;
	c.x = (a.x + b.x)/2;
	c.y = (a.y + b.y)/2;
	c.print();
	return c;
}

int main()
{
	Point x(2, 3);
	Point y(3, 4);
	mid_point(x, y);
	return 0;
}

4. 

#include <bits/stdc++.h>

using namespace std;

struct Point
{
	double x;
	double y;
	Point(int a, int b){ x = a; y = b;}
	Point(){}
	~Point(){}
	void print()
	{
		cout << x << "-" << y;
	}
};



int main()
{
	Point a(2, 3);
	cout << &a << endl;
	cout << &(a.x) << endl;
	cout << &(a.y);
	return 0;
}

=> biến Point và Point.(phần tử đầu) có cùng địa chỉ